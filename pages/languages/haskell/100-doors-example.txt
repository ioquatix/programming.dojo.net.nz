-- A data structure for a door, either Open or Closed:
data Door = Open | Closed deriving Show

-- A function named 'toggle' that will open a closed door or close an opened door:
toggle :: Door -> Door
toggle Open   = Closed
toggle Closed = Open

-- Get the final state of the nth door:
final :: Int -> Door
final n = foldr toggleIfMultiple Closed [1..n]
 where toggleIfMultiple m door = if n `rem` m == 0 then toggle door else door

-- Print a message reporting the final state each of our 100 doors:
main = putStr (concatMap report [1..100])
 where report n = "Door " ++ show n ++ " is " ++ show (final n) ++".\n"
